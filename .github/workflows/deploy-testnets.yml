name: Deploy LGP to Sepolia & Base Sepolia

on:
  workflow_dispatch: {}
  push:
    branches: [ ai/lgp-mvp ]
    paths:
      - "contracts/**"
      - "script/**"
      - "scripts/**"
      - ".github/workflows/deploy-testnets.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      L1_RPC_URL: ${{ secrets.L1_RPC_URL }}
      L2_RPC_URL: ${{ secrets.L2_RPC_URL }}
      DEPLOYER_KEY: ${{ secrets.DEPLOYER_KEY }}
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      # Reliable Foundry install
      - name: Set up Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Show tool versions
        run: |
          which forge && forge --version
          which cast && cast --version
          node --version || true
          npm --version || true

      - name: Cache forge lib
        uses: actions/cache@v4
        with:
          path: lib
          key: forge-lib-${{ hashFiles('foundry.toml') }}

      # NOTE: remove --no-commit (not supported on this runner's forge)
      - name: Install forge deps (forge-std)
        run: |
          if [ ! -d lib/forge-std ]; then forge install foundry-rs/forge-std@v1.9.3; fi

      - name: Build & test
        run: forge test -vvv

      - name: Ensure scripts dir + ts-node
        run: |
          mkdir -p scripts
          npm i -g ts-node typescript

      - name: Resolve deploy script paths
        id: paths
        run: |
          L1="scripts/Deploy_L1.s.sol"; [ -f "$L1" ] || L1="script/Deploy_L1.s.sol"
          L2="scripts/Deploy_L2.s.sol"; [ -f "$L2" ] || L2="script/Deploy_L2.s.sol"
          echo "L1_PATH=$L1" >> $GITHUB_OUTPUT
          echo "L2_PATH=$L2" >> $GITHUB_OUTPUT
          echo "Using L1=$L1"
          echo "Using L2=$L2"

      # ---------- L1 (Sepolia) ----------
      - name: Deploy L1 (Sepolia)
        if: ${{ env.L1_RPC_URL != '' && env.DEPLOYER_KEY != '' }}
        run: |
          forge script "${{ steps.paths.outputs.L1_PATH }}" \
            --rpc-url "$L1_RPC_URL" \
            --private-key "$DEPLOYER_KEY" \
            --broadcast ${ETHERSCAN_API_KEY:+--verify}

      - name: Record L1 addresses
        if: ${{ env.L1_RPC_URL != '' && env.DEPLOYER_KEY != '' }}
        run: |
          if [ -f scripts/deploy-l1.json ]; then
            ts-node scripts/record-addresses.ts scripts/deploy-l1.json
          else
            echo "deploy-l1.json not found (skipping)"
          fi

      # ---------- L2 (Base Sepolia) ----------
      - name: Deploy L2 (Base Sepolia)
        if: ${{ env.L2_RPC_URL != '' && env.DEPLOYER_KEY != '' }}
        run: |
          forge script "${{ steps.paths.outputs.L2_PATH }}" \
            --rpc-url "$L2_RPC_URL" \
            --private-key "$DEPLOYER_KEY" \
            --broadcast

      - name: Record L2 addresses
        if: ${{ env.L2_RPC_URL != '' && env.DEPLOYER_KEY != '' }}
        run: |
          if [ -f scripts/deploy-l2.json ]; then
            ts-node scripts/record-addresses.ts scripts/deploy-l2.json
          else
            echo "deploy-l2.json not found (skipping)"
          fi

      - name: Upload addresses.json
        uses: actions/upload-artifact@v4
        with:
          name: lgp-addresses
          path: scripts/addresses.json
          if-no-files-found: warn
